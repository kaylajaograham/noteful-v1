{"ast":null,"code":"import _classCallCheck from \"/Users/kaylagraham/Desktop/Thinkful/noteful-client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kaylagraham/Desktop/Thinkful/noteful-client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kaylagraham/Desktop/Thinkful/noteful-client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kaylagraham/Desktop/Thinkful/noteful-client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kaylagraham/Desktop/Thinkful/noteful-client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kaylagraham/Desktop/Thinkful/noteful-client/src/Add Folder/AddFolder.js\";\nimport React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport './AddFolder.css';\nimport NoteContext from '../NoteContext';\n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddFolder, _Component);\n\n  function AddFolder() {\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFolder).call(this));\n\n    _this.isNameValid = function (event) {\n      event.preventDefault();\n\n      if (!_this.state.name) {\n        _this.setState({\n          validationMessage: 'Folder name can not be blank.',\n          nameValid: false\n        });\n      } else {\n        _this.setState({\n          validationMessage: '',\n          nameValid: true\n        }, _this.handleAddFolder());\n      }\n    };\n\n    _this.handleAddFolder = function () {\n      var options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          // id: cuid(),\n          name: _this.state.name\n        })\n      };\n      console.log(options);\n      fetch('http://localhost:9090/folders', options).then(function (res) {\n        if (!res.ok) {\n          throw new Error('Something went wrong');\n        }\n\n        return res;\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.context.handleAddFolder(data);\n      }).catch(function (err) {\n        _this.setState({\n          error: err.message\n        });\n      });\n    };\n\n    _this.nameChange = function (letter) {\n      _this.setState({\n        name: letter\n      });\n    };\n\n    _this.state = {\n      error: null,\n      name: '',\n      nameValid: false,\n      validationMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"section\", {\n        className: \"AddFolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Create a folder\"), React.createElement(NotefulForm, {\n        onSubmit: function onSubmit(event) {\n          _this2.isNameValid(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"folder-name-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"folder-name-input\",\n        name: \"folder\",\n        onChange: function onChange(event) {\n          return _this2.nameChange(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), !this.state.nameValid && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.validationMessage))), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Add folder\"))), this.state.error && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.state.error)));\n    }\n  }]);\n\n  return AddFolder;\n}(Component);\n\nAddFolder.contextType = NoteContext;\nexport { AddFolder as default };","map":{"version":3,"sources":["/Users/kaylagraham/Desktop/Thinkful/noteful-client/src/Add Folder/AddFolder.js"],"names":["React","Component","NotefulForm","NoteContext","AddFolder","isNameValid","event","preventDefault","state","name","setState","validationMessage","nameValid","handleAddFolder","options","method","headers","body","JSON","stringify","console","log","fetch","then","res","ok","Error","json","data","context","catch","err","error","message","nameChange","letter","target","value","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport './AddFolder.css';\nimport NoteContext from '../NoteContext';\n\nexport default class AddFolder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      name: '',\n      nameValid: false,\n      validationMessage: ''\n    };\n  }\n  static contextType = NoteContext;\n\n  isNameValid = event => {\n    event.preventDefault();\n    if (!this.state.name) {\n      this.setState({\n        validationMessage: 'Folder name can not be blank.',\n        nameValid: false\n      });\n    } else {\n      this.setState(\n        {\n          validationMessage: '',\n          nameValid: true\n        },\n        this.handleAddFolder()\n      );\n    }\n  };\n\n  handleAddFolder = () => {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        // id: cuid(),\n        name: this.state.name\n      })\n    };\n    console.log(options);\n\n    fetch('http://localhost:9090/folders', options)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong');\n        }\n        return res;\n      })\n      .then(res => res.json())\n      .then(data => {\n        this.context.handleAddFolder(data);\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      });\n  };\n\n  nameChange = letter => {\n    this.setState({ name: letter });\n  };\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n        <NotefulForm\n          onSubmit={event => {\n            this.isNameValid(event);\n          }}\n        >\n          <div className='field'>\n            <label htmlFor='folder-name-input'>Name</label>\n            <input\n              type='text'\n              id='folder-name-input'\n              name='folder'\n              onChange={event => this.nameChange(event.target.value)}\n            />\n            {!this.state.nameValid && (\n              <div>\n                <p>{this.state.validationMessage}</p>\n              </div>\n            )}\n          </div>\n          <div className='buttons'>\n            <button type='submit'>Add folder</button>\n          </div>\n        </NotefulForm>\n        {this.state.error && (\n          <div>\n            <p>{this.state.error}</p>\n          </div>\n        )}\n      </section>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}